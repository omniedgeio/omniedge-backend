name: omniedge docker build

on:
  workflow_dispatch:
    inputs:
      tag:
        description: build with tag (optional)
        required: false

jobs:
  build:
    name: Build on ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-20.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Show CPU Model and Free Space
        run: |
          echo -e "Total CPU cores\t: $(nproc)"
          cat /proc/cpuinfo | grep 'model name'
          free -h

      - name: Show system info
        run: |
          echo -e "system info: $(uname -a)"

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

      - uses: actions/checkout@v2
        name: checkout HEAD
        if: ${{ ! github.event.inputs.tag }}

      - uses: actions/checkout@v2
        name: checkout with tag
        if: ${{ github.event.inputs.tag }}
        with:
          ref: refs/tags/${{ github.event.inputs.tag }}

      - run: |
          git_hash=$(git rev-parse --short HEAD)
          echo "GIT_SHORT_SHA=$git_hash" >> $GITHUB_ENV

      - name: git tag
        if: ${{ github.event.inputs.tag }}
        run: |
          echo "GIT_TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            171635321995.dkr.ecr.us-east-2.amazonaws.com/omniedge-adonis-backend
          tags: |
            latest
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=sha

      - name: notice
        run: |
          DOCKER_TAGS="${{steps.meta.outputs.tags}}"
          DOCKER_TAGS="${DOCKER_TAGS//'%'/'%25'}"
          DOCKER_TAGS="${DOCKER_TAGS//$'\n'/'%0A'}"
          DOCKER_TAGS="${DOCKER_TAGS//$'\r'/'%0D'}"
          echo "::set-output name=content::$DOCKER_TAGS"
          echo "::notice ::docker-tag:$DOCKER_TAGS"

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          build-args: |
            GIT_SHA=${{ env.GIT_SHORT_SHA }}
            GIT_TAG=${{ env.GIT_TAG }}
            BUILD_TIME=${{ steps.date.outputs.date }}
          push: true
          context: .
          tags: ${{ steps.meta.outputs.tags }}
